(()=>{var x=/[BIPENDAWROYGUSKF\ /]+/;function h(e){for(let n=0;n<e.rules.length;n++){let t=e.rules[n];if(typeof t=="string"){e.rules[n]=t.replace(/\s+/," ");continue}}if(e.type==="2d"){let n=e.grid.input[0].length;for(let t of e.grid.input){if(!x.test(t))throw new Error('Grid row contains invalid characters. May only contain "BIPENDAWROYGUSKF" ');if(t.length!==n)throw new Error("2D grid is not uniform")}}if(e.type==="3d"){let n=e.grid.input[0][0].length;for(let t of e.grid.input)for(let s of t){if(!x.test(s))throw new Error('Grid row contains invalid characters. May only contain "BIPENDAWROYGUSKF" ');if(s.length!==n)throw new Error("3D grid is not uniform")}}}function p(e,{from:n,to:t},s){if(e.type==="2d"){let r={x:s.x,y:s.y},a;for(let f=0;f<n.length;f++){let l=t[f];a=a?M(e.grid.input,r,a,s.dir,l):{...r},y(l)&&(l=t[++f]),e.grid.input[a.y]=g(e.grid.input[a.y],a.x,l)}return}let o={x:s.x,y:s.y,z:s.z},i;for(let r=0;r<n.length;r++){let a=t[r];i=i?w(e.grid.input,o,i,s.dir,a):{...o},y(a)&&(a=t[++r]),e.grid.input[i.z][i.y]=g(e.grid.input[i.z][i.y],i.x,a)}}function D(e,n){let t=[];if(e.type==="2d"){for(let s=0;s<e.grid.input.length;s++)for(let o=0;o<e.grid.input[0].length;o++)t.push(...E(e,n,o,s));return t}for(let s=0;s<e.grid.input.length;s++)for(let o=0;o<e.grid.input[0].length;o++)for(let i=0;i<e.grid.input[0][0].length;i++)t.push(...N(e,n,i,o,s));return t}var I=["x+1","x-1","y+1","y-1"],S=["x+1","x-1","y+1","y-1","z+1","z-1"];function E(e,{from:n},t,s){let o=[],i={x:t,y:s};for(let r of I){let a,f=!0;for(let l=0;l<n.length;l++){let u=n[l];if(a=a?M(e.grid.input,i,a,r,u):{x:t,y:s},!a){f=!1;break}if(y(u)&&(u=n[++l]),e.unions[u]&&e.unions[u].has(e.grid.input[a.y][a.x]))break;if(u!=="*"&&u!==e.grid.input[a.y][a.x]){f=!1;break}}f&&o.push({x:t,y:s,dir:r})}return o}function N(e,{from:n},t,s,o){let i=[],r={x:t,y:s,z:o};for(let a of S){let f,l=!0;for(let u=0;u<n.length;u++){let c=n[u];if(f=f?w(e.grid.input,r,f,a,c):{x:t,y:s,z:o},!f){l=!1;break}if(y(c)&&(c=n[++u]),e.unions[c]&&!e.unions[c].has(e.grid.input[f.z][f.y][f.x])){l=!1;break}if(c!=="*"&&c!==e.grid.input[f.z][f.y][f.x]){l=!1;break}}l&&i.push({x:t,y:s,z:o,dir:a})}return i}function M(e,n,t,s,o){let i;if(y(o)&&(i=O(n,t,s)),!i)switch(s){case"x-1":{i={x:t.x-1,y:t.y};break}case"x+1":{i={x:t.x+1,y:t.y};break}case"y-1":{i={x:t.x,y:t.y-1};break}case"y+1":{i={x:t.x,y:t.y+1};break}}if(!(i.x<0||i.y<0||i.x>=e[0].length||i.y>=e.length))return i}function O(e,n,t){let s;switch(t){case"x-1":s={x:e.x,y:n.y-1};break;case"x+1":s={x:e.x,y:n.y+1};break;case"y-1":s={x:n.x+1,y:e.y};break;case"y+1":s={x:n.x-1,y:e.y};break}return s}function w(e,n,t,s,o){let i;switch(y(o)?i=v(n,t,s):G(o)&&(i=V(n,t,s)),s){case"x-1":{i={x:t.x-1,y:t.y,z:t.z};break}case"x+1":{i={x:t.x+1,y:t.y,z:t.z};break}case"y-1":{i={x:t.x,y:t.y-1,z:t.z};break}case"y+1":{i={x:t.x,y:t.y+1,z:t.z};break}case"z-1":{i={x:t.x,y:t.y,z:t.z-1};break}case"z+1":{i={x:t.x,y:t.y,z:t.z+1};break}}return q(e,i)?i:void 0}function q(e,n){return!(n.x<0||n.y<0||n.z<0||n.x>=e[0][0].length||n.y>=e[0].length||n.z>=e.length)}function V(e,n,t){switch(t){case"x-1":return{x:e.x,y:n.y,z:n.z-1};case"x+1":return{x:e.x,y:n.y,z:n.z+1};case"y-1":return{x:n.x,y:e.y,z:n.z-1};case"y+1":return{x:n.x,y:e.y,z:n.z+1};case"z-1":return{x:n.x+1,y:n.y,z:e.x};case"z+1":return{x:n.x-1,y:n.y,z:e.x}}}function v(e,n,t){switch(t){case"x-1":return{x:e.x,y:n.y-1,z:n.z};case"x+1":return{x:e.x,y:n.y+1,z:n.z};case"y-1":return{x:n.x+1,y:e.y,z:n.z};case"y+1":return{x:n.x-1,y:e.y,z:n.z};case"z-1":return{x:n.x,y:n.y-1,z:e.z};case"z+1":return{x:n.x,y:n.y+1,z:e.z}}}function g(e,n,t){return t==="*"&&(t=e[n]),e.slice(0,n)+t+e.slice(n+1)}function G(e){return e===" "}function y(e){return e==="/"}var d=0;function z(e){h(e);let n={...e,...k(e.rules),count:0,rule:-1,id:0};for(let t of n.sequences)for(;;){let s=!1;t.type==="random"&&R(t.rules);for(let o of t.rules)s=m(n,t,o,s);if(!s)break}return n}function P(e,n,t){let s=16.666666666666668,o=0;h(e);let i={...e,...k(e.rules),count:0,rule:-1,id:++d};o=Date.now()+s;let r=async()=>{Date.now()>=o&&(n(i),await L(0),o+=s)},a=async()=>{for(let l of i.sequences)for(i.rule++;d===i.id;){let u=!1;l.type==="random"&&R(l.rules);for(let c of l.rules){if(d!==i.id)return;if(u=m(i,l,c,u),await r(),l.type!=="one"&&u)break}if(!u)break}n(i),t?.(i),f()},f=()=>{i.rule=-1,i.id=-1};return a(),{stop:f}}function L(e=0){return new Promise(n=>setTimeout(n,e))}function m(e,n,t,s){if(t.steps.max&&!t.steps.all&&t.steps.count>=t.steps.max)return s||!1;e.count++;let o=D(e,t);if(o.length===0)return s||!1;if(t.steps.all){for(let i of o)p(e,t,i);e.count+=o.length,t.steps.count=1/0}else{let i=Math.floor(Math.random()*o.length),r=o[i];if(t.steps.count++,p(e,t,r),n.type==="one")return!0}return!0}function k(e,n=!0){let t=[],s={};for(let o of e){if(o.toLowerCase().startsWith("union")||o.toLowerCase().startsWith("symbol")){let[,...i]=o.split(" ");if(!i.length)continue;let[r,a]=i.join("").split("=").map(f=>f.replace(/\s/g,""));if(!r||!a)continue;if(r.length>1&&n)throw new Error("Invalid union symbol: Must be only one character. ({SYMBOL}={UNION})");s[r]=new Set(a.split(""));continue}t.push(A(o,n))}return{sequences:t,unions:s}}function A(e,n=!0){let t={type:"standard",rules:[]};e.toLowerCase().startsWith("one")&&(t.type="one",e=e.slice(3).trim()),e.toLowerCase().startsWith("random")&&(t.type="random",e=e.slice(6).trim());for(let s of C(e)){let[o,i]=s.replace(/\s+/g," ").replace(/(\s*)=(\s*)/,"=").split(" "),r=o.replace(/\s/g,"").split("=");if(r[0]===r[1])continue;if(r.length!==2){if(n)throw new Error("Rules must follow format: {FROM}={TO}");r.push("")}let a={type:"one",from:r[0],to:r[1],steps:W(i,n)};if(a.steps.all&&(a.type="all"),r[0].length!==r[1].length&&n)throw new Error(`{FROM} and {TO} patterns must be equal in length: ${o}`);for(let f=0;f<r[0].length;f++)if((r[0][f]==="/"&&r[1][f]!=="/"||r[0][f]!=="/"&&r[1][f]==="/")&&n)throw new Error(`Step characters (/) must occur in the same positions: ${o}`);t.rules.push(a)}return t}function C(e){return e.split(",").map(n=>n.trim())}function W(e,n=!0){let t={count:0};if(!e)return t;if(e.startsWith("#")===!1){if(n)throw new Error(`Steps must start with '#', (${e})`);return t}if(e==="#ALL")return t.all=!0,t;if(e.includes("..")){let o=e.split(".."),[i,r]=[Number(o[0]),Number(o[1])];if(isNaN(i)||isNaN(r)){if(n)throw new Error("Step range must be formatted: #{FROM}..{TO}");return t}if(i>r||i<0||r<0){if(n)throw new Error("Invalid step range: {FROM} must be below {TO} and both values must be above 0");return t}return t.max=b(i,r),t.seed=()=>b(i,r),t}let s=Number(e.slice(1));if(isNaN(s)){if(n)throw new Error("Invalid step: Must follow be one of: #ALL, #{int}, #{from}..{to}");return t}return t.max=s,t}function b(e,n){return Math.floor(Math.random()*(n-e+1)+e)}function R(e){for(let n=e.length-1;n>0;n--){let t=Math.floor(Math.random()*(n+1)),s=e[n];e[n]=e[t],e[t]=s}return e}onmessage=({data:{model:e,type:n}})=>{if(n==="slow"){P(e,s=>postMessage(s));return}let t=z(e);postMessage(t)};})();
//# sourceMappingURL=grids.js.map
